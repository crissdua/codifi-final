'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34209
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.34209.
'
Namespace WSCofidi
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="Service1Soap", [Namespace]:="http://www.cofidi.com.gt/")>  _
    Partial Public Class Service1
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GeneraCFDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneraCFD_v2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneraCFDBOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneraCFDEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneraCFDEBOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DescargaPDFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EstablecimientosByNITOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EstablecimientosByFechaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DocumentosByNITOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DocumentosByFechaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ContribuyentesByFechaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CancelaCFDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ImportaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ImportaBOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SincronizaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneraDTEOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneraDTE_v2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneraPDFOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultasOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneraQROperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeneraCFDDBOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.FacturaCofidi.My.MySettings.Default.FacturaCofidi_WSCofidi_Service1
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GeneraCFDCompleted As GeneraCFDCompletedEventHandler
        
        '''<remarks/>
        Public Event GeneraCFD_v2Completed As GeneraCFD_v2CompletedEventHandler
        
        '''<remarks/>
        Public Event GeneraCFDBCompleted As GeneraCFDBCompletedEventHandler
        
        '''<remarks/>
        Public Event GeneraCFDECompleted As GeneraCFDECompletedEventHandler
        
        '''<remarks/>
        Public Event GeneraCFDEBCompleted As GeneraCFDEBCompletedEventHandler
        
        '''<remarks/>
        Public Event DescargaPDFCompleted As DescargaPDFCompletedEventHandler
        
        '''<remarks/>
        Public Event EstablecimientosByNITCompleted As EstablecimientosByNITCompletedEventHandler
        
        '''<remarks/>
        Public Event EstablecimientosByFechaCompleted As EstablecimientosByFechaCompletedEventHandler
        
        '''<remarks/>
        Public Event DocumentosByNITCompleted As DocumentosByNITCompletedEventHandler
        
        '''<remarks/>
        Public Event DocumentosByFechaCompleted As DocumentosByFechaCompletedEventHandler
        
        '''<remarks/>
        Public Event ContribuyentesByFechaCompleted As ContribuyentesByFechaCompletedEventHandler
        
        '''<remarks/>
        Public Event CancelaCFDCompleted As CancelaCFDCompletedEventHandler
        
        '''<remarks/>
        Public Event ImportaCompleted As ImportaCompletedEventHandler
        
        '''<remarks/>
        Public Event ImportaBCompleted As ImportaBCompletedEventHandler
        
        '''<remarks/>
        Public Event SincronizaCompleted As SincronizaCompletedEventHandler
        
        '''<remarks/>
        Public Event GeneraDTECompleted As GeneraDTECompletedEventHandler
        
        '''<remarks/>
        Public Event GeneraDTE_v2Completed As GeneraDTE_v2CompletedEventHandler
        
        '''<remarks/>
        Public Event GeneraPDFCompleted As GeneraPDFCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultasCompleted As ConsultasCompletedEventHandler
        
        '''<remarks/>
        Public Event GeneraQRCompleted As GeneraQRCompletedEventHandler
        
        '''<remarks/>
        Public Event GeneraCFDDBCompleted As GeneraCFDDBCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/GeneraCFD", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraCFD(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Archivo As String, ByVal Tipo As String, ByVal Referencia As String) As String
            Dim results() As Object = Me.Invoke("GeneraCFD", New Object() {Empresa, Dominio, Usuario, Contraseña, Archivo, Tipo, Referencia})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraCFDAsync(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Archivo As String, ByVal Tipo As String, ByVal Referencia As String)
            Me.GeneraCFDAsync(Empresa, Dominio, Usuario, Contraseña, Archivo, Tipo, Referencia, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraCFDAsync(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Archivo As String, ByVal Tipo As String, ByVal Referencia As String, ByVal userState As Object)
            If (Me.GeneraCFDOperationCompleted Is Nothing) Then
                Me.GeneraCFDOperationCompleted = AddressOf Me.OnGeneraCFDOperationCompleted
            End If
            Me.InvokeAsync("GeneraCFD", New Object() {Empresa, Dominio, Usuario, Contraseña, Archivo, Tipo, Referencia}, Me.GeneraCFDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraCFDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraCFDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraCFDCompleted(Me, New GeneraCFDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/GeneraCFD_v2", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraCFD_v2(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Archivo As String, ByVal Tipo As String, ByVal Referencia As String, ByVal Resolucion As String) As String
            Dim results() As Object = Me.Invoke("GeneraCFD_v2", New Object() {Empresa, Dominio, Usuario, Contraseña, Archivo, Tipo, Referencia, Resolucion})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraCFD_v2Async(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Archivo As String, ByVal Tipo As String, ByVal Referencia As String, ByVal Resolucion As String)
            Me.GeneraCFD_v2Async(Empresa, Dominio, Usuario, Contraseña, Archivo, Tipo, Referencia, Resolucion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraCFD_v2Async(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Archivo As String, ByVal Tipo As String, ByVal Referencia As String, ByVal Resolucion As String, ByVal userState As Object)
            If (Me.GeneraCFD_v2OperationCompleted Is Nothing) Then
                Me.GeneraCFD_v2OperationCompleted = AddressOf Me.OnGeneraCFD_v2OperationCompleted
            End If
            Me.InvokeAsync("GeneraCFD_v2", New Object() {Empresa, Dominio, Usuario, Contraseña, Archivo, Tipo, Referencia, Resolucion}, Me.GeneraCFD_v2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraCFD_v2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraCFD_v2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraCFD_v2Completed(Me, New GeneraCFD_v2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/GeneraCFDB", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraCFDB(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal Archivo() As Byte, ByVal Tipo As String, ByVal Referencia As String) As String
            Dim results() As Object = Me.Invoke("GeneraCFDB", New Object() {Empresa, Dominio, Usuario, Contraseña, Archivo, Tipo, Referencia})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraCFDBAsync(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Archivo() As Byte, ByVal Tipo As String, ByVal Referencia As String)
            Me.GeneraCFDBAsync(Empresa, Dominio, Usuario, Contraseña, Archivo, Tipo, Referencia, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraCFDBAsync(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Archivo() As Byte, ByVal Tipo As String, ByVal Referencia As String, ByVal userState As Object)
            If (Me.GeneraCFDBOperationCompleted Is Nothing) Then
                Me.GeneraCFDBOperationCompleted = AddressOf Me.OnGeneraCFDBOperationCompleted
            End If
            Me.InvokeAsync("GeneraCFDB", New Object() {Empresa, Dominio, Usuario, Contraseña, Archivo, Tipo, Referencia}, Me.GeneraCFDBOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraCFDBOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraCFDBCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraCFDBCompleted(Me, New GeneraCFDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/GeneraCFDE", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraCFDE(ByVal CompanyID As String, ByVal Domain As String, ByVal User As String, ByVal Password As String, ByVal File As String, ByVal Type As String, ByVal Reference As String) As String
            Dim results() As Object = Me.Invoke("GeneraCFDE", New Object() {CompanyID, Domain, User, Password, File, Type, Reference})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraCFDEAsync(ByVal CompanyID As String, ByVal Domain As String, ByVal User As String, ByVal Password As String, ByVal File As String, ByVal Type As String, ByVal Reference As String)
            Me.GeneraCFDEAsync(CompanyID, Domain, User, Password, File, Type, Reference, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraCFDEAsync(ByVal CompanyID As String, ByVal Domain As String, ByVal User As String, ByVal Password As String, ByVal File As String, ByVal Type As String, ByVal Reference As String, ByVal userState As Object)
            If (Me.GeneraCFDEOperationCompleted Is Nothing) Then
                Me.GeneraCFDEOperationCompleted = AddressOf Me.OnGeneraCFDEOperationCompleted
            End If
            Me.InvokeAsync("GeneraCFDE", New Object() {CompanyID, Domain, User, Password, File, Type, Reference}, Me.GeneraCFDEOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraCFDEOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraCFDECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraCFDECompleted(Me, New GeneraCFDECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/GeneraCFDEB", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraCFDEB(ByVal CompanyID As String, ByVal Domain As String, ByVal User As String, ByVal Password As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal File() As Byte, ByVal Type As String, ByVal Reference As String) As String
            Dim results() As Object = Me.Invoke("GeneraCFDEB", New Object() {CompanyID, Domain, User, Password, File, Type, Reference})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraCFDEBAsync(ByVal CompanyID As String, ByVal Domain As String, ByVal User As String, ByVal Password As String, ByVal File() As Byte, ByVal Type As String, ByVal Reference As String)
            Me.GeneraCFDEBAsync(CompanyID, Domain, User, Password, File, Type, Reference, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraCFDEBAsync(ByVal CompanyID As String, ByVal Domain As String, ByVal User As String, ByVal Password As String, ByVal File() As Byte, ByVal Type As String, ByVal Reference As String, ByVal userState As Object)
            If (Me.GeneraCFDEBOperationCompleted Is Nothing) Then
                Me.GeneraCFDEBOperationCompleted = AddressOf Me.OnGeneraCFDEBOperationCompleted
            End If
            Me.InvokeAsync("GeneraCFDEB", New Object() {CompanyID, Domain, User, Password, File, Type, Reference}, Me.GeneraCFDEBOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraCFDEBOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraCFDEBCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraCFDEBCompleted(Me, New GeneraCFDEBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/DescargaPDF", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DescargaPDF(ByVal Empresa As String, ByVal NoDocumento As String, ByVal TipoDocumento As String, ByVal Usuario As String, ByVal Contraseña As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("DescargaPDF", New Object() {Empresa, NoDocumento, TipoDocumento, Usuario, Contraseña})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub DescargaPDFAsync(ByVal Empresa As String, ByVal NoDocumento As String, ByVal TipoDocumento As String, ByVal Usuario As String, ByVal Contraseña As String)
            Me.DescargaPDFAsync(Empresa, NoDocumento, TipoDocumento, Usuario, Contraseña, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DescargaPDFAsync(ByVal Empresa As String, ByVal NoDocumento As String, ByVal TipoDocumento As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal userState As Object)
            If (Me.DescargaPDFOperationCompleted Is Nothing) Then
                Me.DescargaPDFOperationCompleted = AddressOf Me.OnDescargaPDFOperationCompleted
            End If
            Me.InvokeAsync("DescargaPDF", New Object() {Empresa, NoDocumento, TipoDocumento, Usuario, Contraseña}, Me.DescargaPDFOperationCompleted, userState)
        End Sub
        
        Private Sub OnDescargaPDFOperationCompleted(ByVal arg As Object)
            If (Not (Me.DescargaPDFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DescargaPDFCompleted(Me, New DescargaPDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/EstablecimientosByNIT", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EstablecimientosByNIT(ByVal Empresa As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal NIT As String) As String
            Dim results() As Object = Me.Invoke("EstablecimientosByNIT", New Object() {Empresa, Usuario, Contraseña, NIT})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EstablecimientosByNITAsync(ByVal Empresa As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal NIT As String)
            Me.EstablecimientosByNITAsync(Empresa, Usuario, Contraseña, NIT, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EstablecimientosByNITAsync(ByVal Empresa As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal NIT As String, ByVal userState As Object)
            If (Me.EstablecimientosByNITOperationCompleted Is Nothing) Then
                Me.EstablecimientosByNITOperationCompleted = AddressOf Me.OnEstablecimientosByNITOperationCompleted
            End If
            Me.InvokeAsync("EstablecimientosByNIT", New Object() {Empresa, Usuario, Contraseña, NIT}, Me.EstablecimientosByNITOperationCompleted, userState)
        End Sub
        
        Private Sub OnEstablecimientosByNITOperationCompleted(ByVal arg As Object)
            If (Not (Me.EstablecimientosByNITCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EstablecimientosByNITCompleted(Me, New EstablecimientosByNITCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/EstablecimientosByFecha", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EstablecimientosByFecha(ByVal Empresa As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Fecha As String, ByVal Tipo As String) As String
            Dim results() As Object = Me.Invoke("EstablecimientosByFecha", New Object() {Empresa, Usuario, Contraseña, Fecha, Tipo})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EstablecimientosByFechaAsync(ByVal Empresa As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Fecha As String, ByVal Tipo As String)
            Me.EstablecimientosByFechaAsync(Empresa, Usuario, Contraseña, Fecha, Tipo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EstablecimientosByFechaAsync(ByVal Empresa As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Fecha As String, ByVal Tipo As String, ByVal userState As Object)
            If (Me.EstablecimientosByFechaOperationCompleted Is Nothing) Then
                Me.EstablecimientosByFechaOperationCompleted = AddressOf Me.OnEstablecimientosByFechaOperationCompleted
            End If
            Me.InvokeAsync("EstablecimientosByFecha", New Object() {Empresa, Usuario, Contraseña, Fecha, Tipo}, Me.EstablecimientosByFechaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEstablecimientosByFechaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EstablecimientosByFechaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EstablecimientosByFechaCompleted(Me, New EstablecimientosByFechaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/DocumentosByNIT", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DocumentosByNIT(ByVal Empresa As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal NIT As String) As String
            Dim results() As Object = Me.Invoke("DocumentosByNIT", New Object() {Empresa, Usuario, Contraseña, NIT})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DocumentosByNITAsync(ByVal Empresa As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal NIT As String)
            Me.DocumentosByNITAsync(Empresa, Usuario, Contraseña, NIT, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DocumentosByNITAsync(ByVal Empresa As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal NIT As String, ByVal userState As Object)
            If (Me.DocumentosByNITOperationCompleted Is Nothing) Then
                Me.DocumentosByNITOperationCompleted = AddressOf Me.OnDocumentosByNITOperationCompleted
            End If
            Me.InvokeAsync("DocumentosByNIT", New Object() {Empresa, Usuario, Contraseña, NIT}, Me.DocumentosByNITOperationCompleted, userState)
        End Sub
        
        Private Sub OnDocumentosByNITOperationCompleted(ByVal arg As Object)
            If (Not (Me.DocumentosByNITCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DocumentosByNITCompleted(Me, New DocumentosByNITCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/DocumentosByFecha", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DocumentosByFecha(ByVal Empresa As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Fecha As String, ByVal Tipo As String) As String
            Dim results() As Object = Me.Invoke("DocumentosByFecha", New Object() {Empresa, Usuario, Contraseña, Fecha, Tipo})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DocumentosByFechaAsync(ByVal Empresa As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Fecha As String, ByVal Tipo As String)
            Me.DocumentosByFechaAsync(Empresa, Usuario, Contraseña, Fecha, Tipo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DocumentosByFechaAsync(ByVal Empresa As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Fecha As String, ByVal Tipo As String, ByVal userState As Object)
            If (Me.DocumentosByFechaOperationCompleted Is Nothing) Then
                Me.DocumentosByFechaOperationCompleted = AddressOf Me.OnDocumentosByFechaOperationCompleted
            End If
            Me.InvokeAsync("DocumentosByFecha", New Object() {Empresa, Usuario, Contraseña, Fecha, Tipo}, Me.DocumentosByFechaOperationCompleted, userState)
        End Sub
        
        Private Sub OnDocumentosByFechaOperationCompleted(ByVal arg As Object)
            If (Not (Me.DocumentosByFechaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DocumentosByFechaCompleted(Me, New DocumentosByFechaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/ContribuyentesByFecha", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ContribuyentesByFecha(ByVal Empresa As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Fecha As String, ByVal Tipo As String) As String
            Dim results() As Object = Me.Invoke("ContribuyentesByFecha", New Object() {Empresa, Usuario, Contraseña, Fecha, Tipo})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ContribuyentesByFechaAsync(ByVal Empresa As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Fecha As String, ByVal Tipo As String)
            Me.ContribuyentesByFechaAsync(Empresa, Usuario, Contraseña, Fecha, Tipo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ContribuyentesByFechaAsync(ByVal Empresa As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Fecha As String, ByVal Tipo As String, ByVal userState As Object)
            If (Me.ContribuyentesByFechaOperationCompleted Is Nothing) Then
                Me.ContribuyentesByFechaOperationCompleted = AddressOf Me.OnContribuyentesByFechaOperationCompleted
            End If
            Me.InvokeAsync("ContribuyentesByFecha", New Object() {Empresa, Usuario, Contraseña, Fecha, Tipo}, Me.ContribuyentesByFechaOperationCompleted, userState)
        End Sub
        
        Private Sub OnContribuyentesByFechaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ContribuyentesByFechaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ContribuyentesByFechaCompleted(Me, New ContribuyentesByFechaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/CancelaCFD", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CancelaCFD(ByVal Empresa As String, ByVal FolioFiscal As String, ByVal TipoDocumento As String, ByVal FechaEmision As Date, ByVal Usuario As String, ByVal Contraseña As String) As String
            Dim results() As Object = Me.Invoke("CancelaCFD", New Object() {Empresa, FolioFiscal, TipoDocumento, FechaEmision, Usuario, Contraseña})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CancelaCFDAsync(ByVal Empresa As String, ByVal FolioFiscal As String, ByVal TipoDocumento As String, ByVal FechaEmision As Date, ByVal Usuario As String, ByVal Contraseña As String)
            Me.CancelaCFDAsync(Empresa, FolioFiscal, TipoDocumento, FechaEmision, Usuario, Contraseña, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CancelaCFDAsync(ByVal Empresa As String, ByVal FolioFiscal As String, ByVal TipoDocumento As String, ByVal FechaEmision As Date, ByVal Usuario As String, ByVal Contraseña As String, ByVal userState As Object)
            If (Me.CancelaCFDOperationCompleted Is Nothing) Then
                Me.CancelaCFDOperationCompleted = AddressOf Me.OnCancelaCFDOperationCompleted
            End If
            Me.InvokeAsync("CancelaCFD", New Object() {Empresa, FolioFiscal, TipoDocumento, FechaEmision, Usuario, Contraseña}, Me.CancelaCFDOperationCompleted, userState)
        End Sub
        
        Private Sub OnCancelaCFDOperationCompleted(ByVal arg As Object)
            If (Not (Me.CancelaCFDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CancelaCFDCompleted(Me, New CancelaCFDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/Importa", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Importa(ByVal Empresa As String, ByVal Usuario As String, ByVal Password As String, ByVal Archivo As String, ByVal Tipo As String, ByVal Referencia As String) As String
            Dim results() As Object = Me.Invoke("Importa", New Object() {Empresa, Usuario, Password, Archivo, Tipo, Referencia})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ImportaAsync(ByVal Empresa As String, ByVal Usuario As String, ByVal Password As String, ByVal Archivo As String, ByVal Tipo As String, ByVal Referencia As String)
            Me.ImportaAsync(Empresa, Usuario, Password, Archivo, Tipo, Referencia, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ImportaAsync(ByVal Empresa As String, ByVal Usuario As String, ByVal Password As String, ByVal Archivo As String, ByVal Tipo As String, ByVal Referencia As String, ByVal userState As Object)
            If (Me.ImportaOperationCompleted Is Nothing) Then
                Me.ImportaOperationCompleted = AddressOf Me.OnImportaOperationCompleted
            End If
            Me.InvokeAsync("Importa", New Object() {Empresa, Usuario, Password, Archivo, Tipo, Referencia}, Me.ImportaOperationCompleted, userState)
        End Sub
        
        Private Sub OnImportaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ImportaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ImportaCompleted(Me, New ImportaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/ImportaB", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ImportaB(ByVal Empresa As String, ByVal Usuario As String, ByVal Password As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal Archivo() As Byte, ByVal Tipo As String, ByVal Referencia As String) As String
            Dim results() As Object = Me.Invoke("ImportaB", New Object() {Empresa, Usuario, Password, Archivo, Tipo, Referencia})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ImportaBAsync(ByVal Empresa As String, ByVal Usuario As String, ByVal Password As String, ByVal Archivo() As Byte, ByVal Tipo As String, ByVal Referencia As String)
            Me.ImportaBAsync(Empresa, Usuario, Password, Archivo, Tipo, Referencia, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ImportaBAsync(ByVal Empresa As String, ByVal Usuario As String, ByVal Password As String, ByVal Archivo() As Byte, ByVal Tipo As String, ByVal Referencia As String, ByVal userState As Object)
            If (Me.ImportaBOperationCompleted Is Nothing) Then
                Me.ImportaBOperationCompleted = AddressOf Me.OnImportaBOperationCompleted
            End If
            Me.InvokeAsync("ImportaB", New Object() {Empresa, Usuario, Password, Archivo, Tipo, Referencia}, Me.ImportaBOperationCompleted, userState)
        End Sub
        
        Private Sub OnImportaBOperationCompleted(ByVal arg As Object)
            If (Not (Me.ImportaBCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ImportaBCompleted(Me, New ImportaBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/Sincroniza", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Sincroniza(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal Archivo() As Byte, ByVal Tipo As String, ByVal Directorio As String) As String
            Dim results() As Object = Me.Invoke("Sincroniza", New Object() {Empresa, Dominio, Usuario, Contraseña, Archivo, Tipo, Directorio})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SincronizaAsync(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Archivo() As Byte, ByVal Tipo As String, ByVal Directorio As String)
            Me.SincronizaAsync(Empresa, Dominio, Usuario, Contraseña, Archivo, Tipo, Directorio, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SincronizaAsync(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Archivo() As Byte, ByVal Tipo As String, ByVal Directorio As String, ByVal userState As Object)
            If (Me.SincronizaOperationCompleted Is Nothing) Then
                Me.SincronizaOperationCompleted = AddressOf Me.OnSincronizaOperationCompleted
            End If
            Me.InvokeAsync("Sincroniza", New Object() {Empresa, Dominio, Usuario, Contraseña, Archivo, Tipo, Directorio}, Me.SincronizaOperationCompleted, userState)
        End Sub
        
        Private Sub OnSincronizaOperationCompleted(ByVal arg As Object)
            If (Not (Me.SincronizaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SincronizaCompleted(Me, New SincronizaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/GeneraDTE", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraDTE(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Archivo As String, ByVal Tipo As String, ByVal Referencia As String) As String
            Dim results() As Object = Me.Invoke("GeneraDTE", New Object() {Empresa, Dominio, Usuario, Contraseña, Archivo, Tipo, Referencia})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraDTEAsync(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Archivo As String, ByVal Tipo As String, ByVal Referencia As String)
            Me.GeneraDTEAsync(Empresa, Dominio, Usuario, Contraseña, Archivo, Tipo, Referencia, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraDTEAsync(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Archivo As String, ByVal Tipo As String, ByVal Referencia As String, ByVal userState As Object)
            If (Me.GeneraDTEOperationCompleted Is Nothing) Then
                Me.GeneraDTEOperationCompleted = AddressOf Me.OnGeneraDTEOperationCompleted
            End If
            Me.InvokeAsync("GeneraDTE", New Object() {Empresa, Dominio, Usuario, Contraseña, Archivo, Tipo, Referencia}, Me.GeneraDTEOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraDTEOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraDTECompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraDTECompleted(Me, New GeneraDTECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/GeneraDTE_v2", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraDTE_v2(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Archivo As String, ByVal Tipo As String, ByVal Referencia As String, ByVal Resolucion As String) As String
            Dim results() As Object = Me.Invoke("GeneraDTE_v2", New Object() {Empresa, Dominio, Usuario, Contraseña, Archivo, Tipo, Referencia, Resolucion})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraDTE_v2Async(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Archivo As String, ByVal Tipo As String, ByVal Referencia As String, ByVal Resolucion As String)
            Me.GeneraDTE_v2Async(Empresa, Dominio, Usuario, Contraseña, Archivo, Tipo, Referencia, Resolucion, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraDTE_v2Async(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Archivo As String, ByVal Tipo As String, ByVal Referencia As String, ByVal Resolucion As String, ByVal userState As Object)
            If (Me.GeneraDTE_v2OperationCompleted Is Nothing) Then
                Me.GeneraDTE_v2OperationCompleted = AddressOf Me.OnGeneraDTE_v2OperationCompleted
            End If
            Me.InvokeAsync("GeneraDTE_v2", New Object() {Empresa, Dominio, Usuario, Contraseña, Archivo, Tipo, Referencia, Resolucion}, Me.GeneraDTE_v2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraDTE_v2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraDTE_v2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraDTE_v2Completed(Me, New GeneraDTE_v2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/GeneraPDF", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraPDF(ByVal Empresa As String, ByVal NoDocumento As String, ByVal TipoDocumento As String, ByVal Usuario As String, ByVal Contraseña As String) As String
            Dim results() As Object = Me.Invoke("GeneraPDF", New Object() {Empresa, NoDocumento, TipoDocumento, Usuario, Contraseña})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraPDFAsync(ByVal Empresa As String, ByVal NoDocumento As String, ByVal TipoDocumento As String, ByVal Usuario As String, ByVal Contraseña As String)
            Me.GeneraPDFAsync(Empresa, NoDocumento, TipoDocumento, Usuario, Contraseña, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraPDFAsync(ByVal Empresa As String, ByVal NoDocumento As String, ByVal TipoDocumento As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal userState As Object)
            If (Me.GeneraPDFOperationCompleted Is Nothing) Then
                Me.GeneraPDFOperationCompleted = AddressOf Me.OnGeneraPDFOperationCompleted
            End If
            Me.InvokeAsync("GeneraPDF", New Object() {Empresa, NoDocumento, TipoDocumento, Usuario, Contraseña}, Me.GeneraPDFOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraPDFOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraPDFCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraPDFCompleted(Me, New GeneraPDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/Consultas", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultas(ByVal Empresa As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal FechaInicial As Date, ByVal FechaFinal As Date, ByVal DocumentoInicial As String, ByVal DocumentoFinal As String) As String
            Dim results() As Object = Me.Invoke("Consultas", New Object() {Empresa, Usuario, Contraseña, FechaInicial, FechaFinal, DocumentoInicial, DocumentoFinal})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultasAsync(ByVal Empresa As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal FechaInicial As Date, ByVal FechaFinal As Date, ByVal DocumentoInicial As String, ByVal DocumentoFinal As String)
            Me.ConsultasAsync(Empresa, Usuario, Contraseña, FechaInicial, FechaFinal, DocumentoInicial, DocumentoFinal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultasAsync(ByVal Empresa As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal FechaInicial As Date, ByVal FechaFinal As Date, ByVal DocumentoInicial As String, ByVal DocumentoFinal As String, ByVal userState As Object)
            If (Me.ConsultasOperationCompleted Is Nothing) Then
                Me.ConsultasOperationCompleted = AddressOf Me.OnConsultasOperationCompleted
            End If
            Me.InvokeAsync("Consultas", New Object() {Empresa, Usuario, Contraseña, FechaInicial, FechaFinal, DocumentoInicial, DocumentoFinal}, Me.ConsultasOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultasOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultasCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultasCompleted(Me, New ConsultasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/GeneraQR", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraQR(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Cadena As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("GeneraQR", New Object() {Empresa, Dominio, Usuario, Contraseña, Cadena})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraQRAsync(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Cadena As String)
            Me.GeneraQRAsync(Empresa, Dominio, Usuario, Contraseña, Cadena, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraQRAsync(ByVal Empresa As String, ByVal Dominio As String, ByVal Usuario As String, ByVal Contraseña As String, ByVal Cadena As String, ByVal userState As Object)
            If (Me.GeneraQROperationCompleted Is Nothing) Then
                Me.GeneraQROperationCompleted = AddressOf Me.OnGeneraQROperationCompleted
            End If
            Me.InvokeAsync("GeneraQR", New Object() {Empresa, Dominio, Usuario, Contraseña, Cadena}, Me.GeneraQROperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraQROperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraQRCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraQRCompleted(Me, New GeneraQRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cofidi.com.gt/GeneraCFDDB", RequestNamespace:="http://www.cofidi.com.gt/", ResponseNamespace:="http://www.cofidi.com.gt/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeneraCFDDB(ByVal Empresa As String, ByVal Usuario As String, ByVal Password As String, ByVal NoDocumento As String, ByVal TipoDocumento As String, ByVal Tipo As String) As String
            Dim results() As Object = Me.Invoke("GeneraCFDDB", New Object() {Empresa, Usuario, Password, NoDocumento, TipoDocumento, Tipo})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeneraCFDDBAsync(ByVal Empresa As String, ByVal Usuario As String, ByVal Password As String, ByVal NoDocumento As String, ByVal TipoDocumento As String, ByVal Tipo As String)
            Me.GeneraCFDDBAsync(Empresa, Usuario, Password, NoDocumento, TipoDocumento, Tipo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeneraCFDDBAsync(ByVal Empresa As String, ByVal Usuario As String, ByVal Password As String, ByVal NoDocumento As String, ByVal TipoDocumento As String, ByVal Tipo As String, ByVal userState As Object)
            If (Me.GeneraCFDDBOperationCompleted Is Nothing) Then
                Me.GeneraCFDDBOperationCompleted = AddressOf Me.OnGeneraCFDDBOperationCompleted
            End If
            Me.InvokeAsync("GeneraCFDDB", New Object() {Empresa, Usuario, Password, NoDocumento, TipoDocumento, Tipo}, Me.GeneraCFDDBOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeneraCFDDBOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeneraCFDDBCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeneraCFDDBCompleted(Me, New GeneraCFDDBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GeneraCFDCompletedEventHandler(ByVal sender As Object, ByVal e As GeneraCFDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraCFDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GeneraCFD_v2CompletedEventHandler(ByVal sender As Object, ByVal e As GeneraCFD_v2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraCFD_v2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GeneraCFDBCompletedEventHandler(ByVal sender As Object, ByVal e As GeneraCFDBCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraCFDBCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GeneraCFDECompletedEventHandler(ByVal sender As Object, ByVal e As GeneraCFDECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraCFDECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GeneraCFDEBCompletedEventHandler(ByVal sender As Object, ByVal e As GeneraCFDEBCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraCFDEBCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub DescargaPDFCompletedEventHandler(ByVal sender As Object, ByVal e As DescargaPDFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DescargaPDFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EstablecimientosByNITCompletedEventHandler(ByVal sender As Object, ByVal e As EstablecimientosByNITCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EstablecimientosByNITCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub EstablecimientosByFechaCompletedEventHandler(ByVal sender As Object, ByVal e As EstablecimientosByFechaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EstablecimientosByFechaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub DocumentosByNITCompletedEventHandler(ByVal sender As Object, ByVal e As DocumentosByNITCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DocumentosByNITCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub DocumentosByFechaCompletedEventHandler(ByVal sender As Object, ByVal e As DocumentosByFechaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DocumentosByFechaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub ContribuyentesByFechaCompletedEventHandler(ByVal sender As Object, ByVal e As ContribuyentesByFechaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ContribuyentesByFechaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub CancelaCFDCompletedEventHandler(ByVal sender As Object, ByVal e As CancelaCFDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CancelaCFDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub ImportaCompletedEventHandler(ByVal sender As Object, ByVal e As ImportaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ImportaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub ImportaBCompletedEventHandler(ByVal sender As Object, ByVal e As ImportaBCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ImportaBCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub SincronizaCompletedEventHandler(ByVal sender As Object, ByVal e As SincronizaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SincronizaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GeneraDTECompletedEventHandler(ByVal sender As Object, ByVal e As GeneraDTECompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraDTECompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GeneraDTE_v2CompletedEventHandler(ByVal sender As Object, ByVal e As GeneraDTE_v2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraDTE_v2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GeneraPDFCompletedEventHandler(ByVal sender As Object, ByVal e As GeneraPDFCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraPDFCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub ConsultasCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultasCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultasCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GeneraQRCompletedEventHandler(ByVal sender As Object, ByVal e As GeneraQRCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraQRCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GeneraCFDDBCompletedEventHandler(ByVal sender As Object, ByVal e As GeneraCFDDBCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeneraCFDDBCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
